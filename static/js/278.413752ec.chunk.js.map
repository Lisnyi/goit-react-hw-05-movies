{"version":3,"file":"static/js/278.413752ec.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","shared/API/API.js","shared/components/MoviesList/MoviesList.styled.js","shared/components/MoviesList/MoviesList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useSearchParams } from \"react-router-dom\"\nimport { API, MoviesList } from \"shared\"\n\nconst { getMovieByKeyword } = API\n\nexport default function Movies() {\n  const [query, setQuery] = useState('')\n  const [moviesList, setMoviesList] = useState([])\n  const [loader, setLoader] = useState(false)\n  const [error, setError] = useState(null)\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const searchQuery = searchParams.get(\"query\")\n  const isMovies = Boolean(moviesList.length)\n\n  useEffect (() => {\n    async function fetchMovieByKeyword (searchQuery) {\n      if (!searchQuery) {\n        return\n      }\n      try {\n        setLoader(true)\n        setError(null)\n        const data = await getMovieByKeyword(searchQuery)\n        const { data: {results, total_results}} = data\n        setMoviesList(results)\n        if (total_results === 0) {\n          setError('We did not find any images for your request')\n          return\n        }\n        return\n      } catch (e) {\n        setMoviesList([])\n        setError('Whoops something went wrong')\n      } finally {\n        setLoader(false)\n      }\n    }\n\n    fetchMovieByKeyword(searchQuery)\n  }, [searchQuery])\n\n  useEffect (() => {\n    searchQuery && setQuery(searchQuery)\n  }, [searchQuery] )\n\n\n\n  function handleChange ({target}) {\n    setQuery(target.value)\n  }\n  \n  function onSearch () {\n    const search = query.trim() !== \"\" ? {query: query.trim()} : null\n    search && setSearchParams (search)\n  }\n\n  return (\n    <>\n      <input name=\"search\" type=\"text\" value={query} onChange={handleChange} autoComplete=\"off\"/>\n      <button type=\"button\" onClick={onSearch}>Search</button>\n      {loader && <p>Loading...</p>}\n      {error && <p>{error}</p>}\n      {isMovies && <MoviesList moviesList={moviesList} />}\n    </>\n  )\n}\n","import axios from \"axios\"\n\nconst KEY = '2acc48bc8101b89794229029120e4b70'\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nasync function getTrendingMovies (page=1) {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}&page=${page}`)\n    return response\n}\n\nasync function getMovieByKeyword (keyword, page=1) {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&page=${page}`)\n    return response\n}\n\nasync function getMovieDetails (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}?api_key=${KEY}`)\n\n    return response\n}\n\nasync function getMovieCredits (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}`)\n    return response\n}\n\nasync function getMovieReviews (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}`)\n    return response\n}\n\nconst API = {\n    getTrendingMovies,\n    getMovieByKeyword,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReviews\n}\n\nexport default API","import styled from \"styled-components\";\n\nconst ListOfMovies = styled.ul`\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n\n    li {\n        margin-bottom: 4px;\n\n        &:last-child{\n            margin-bottom: 0;\n        }\n    }\n`\n\nexport default ListOfMovies","import { Link, useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport ListOfMovies from \"./MoviesList.styled\"\n\nexport default function MoviesList({moviesList}) {\n  const location = useLocation()\n  return (\n    <ListOfMovies>\n        {moviesList.map(({id, original_title}) =>\n            (<li key={id}>\n                <Link state={{from: location}} to={`/movies/${id}`} >{original_title}</Link>\n            </li>))}\n    </ListOfMovies>\n  )\n}\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired\n  }))\n}\n"],"names":["getMovieByKeyword","API","Movies","useState","query","setQuery","moviesList","setMoviesList","loader","setLoader","error","setError","useSearchParams","searchParams","setSearchParams","searchQuery","get","isMovies","Boolean","length","useEffect","data","results","total_results","fetchMovieByKeyword","name","type","value","onChange","target","autoComplete","onClick","search","trim","KEY","BASE_URL","getTrendingMovies","page","axios","response","keyword","getMovieDetails","movie_id","getMovieCredits","getMovieReviews","styled","MoviesList","location","useLocation","map","id","original_title","state","from","to"],"sourceRoot":""}