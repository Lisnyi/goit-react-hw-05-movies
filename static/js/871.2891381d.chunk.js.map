{"version":3,"file":"static/js/871.2891381d.chunk.js","mappings":"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","sources":["pages/Reviews/Reviews.jsx","shared/API/API.js","shared/components/MoviesList/MoviesList.styled.js","shared/components/MoviesList/MoviesList.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { useState, useEffect } from \"react\"\nimport { API } from \"shared\"\n\nconst { getMovieReviews } = API\n\nexport default function Reviews() {\n    const [movieReviews, setMovieReviews] = useState([])\n    const [loader, setLoader] = useState(false)\n    const [error, setError] = useState(null)\n\n    const { movieId } = useParams()\n    const isReviews = Boolean(movieReviews.length)\n\n\n    useEffect(() => {\n        async function fetchMovieReviews () {\n            try {\n                setLoader(true)\n                setError(null)\n                setMovieReviews([])\n                const data = await getMovieReviews(movieId)\n                setMovieReviews(data.data.results)\n                return\n              } catch (e) {\n                setMovieReviews([])\n                setError('Whoops something went wrong')\n              } finally {\n                setLoader(false)\n              }\n        }\n\n        fetchMovieReviews()\n    },[movieId])\n\n    return (\n        <>\n            {loader && <p>Loading...</p>}\n            {error && <p>{error}</p>}\n            {isReviews &&   <ul>\n                                {movieReviews.map(({author, content, id}) => <li key={id}>\n                                    <article>\n                                        <b>Author: {author}</b>\n                                        <p>{content}</p>\n                                    </article>\n                                </li>)}\n                            </ul>}\n            {!isReviews && <p>We don`t have any reviws for this movie</p>}\n        </>\n    )\n}\n","import axios from \"axios\"\n\nconst KEY = '2acc48bc8101b89794229029120e4b70'\nconst BASE_URL = 'https://api.themoviedb.org/3/'\n\nasync function getTrendingMovies (page=1) {\n    const response = await axios.get(`${BASE_URL}trending/movie/day?api_key=${KEY}&page=${page}`)\n    return response\n}\n\nasync function getMovieByKeyword (keyword, page=1) {\n    const response = await axios.get(`${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&page=${page}`)\n    return response\n}\n\nasync function getMovieDetails (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}?api_key=${KEY}`)\n\n    return response\n}\n\nasync function getMovieCredits (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/credits?api_key=${KEY}`)\n    return response\n}\n\nasync function getMovieReviews (movie_id) {\n    const response = await axios.get(`${BASE_URL}movie/${movie_id}/reviews?api_key=${KEY}`)\n    return response\n}\n\nconst API = {\n    getTrendingMovies,\n    getMovieByKeyword,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReviews\n}\n\nexport default API","import styled from \"styled-components\";\n\nconst ListOfMovies = styled.ul`\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n\n    li {\n        margin-bottom: 4px;\n\n        &:last-child{\n            margin-bottom: 0;\n        }\n    }\n`\n\nexport default ListOfMovies","import { Link, useLocation } from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport ListOfMovies from \"./MoviesList.styled\"\n\nexport default function MoviesList({moviesList}) {\n  const location = useLocation()\n  return (\n    <ListOfMovies>\n        {moviesList.map(({id, original_title}) =>\n            (<li key={id}>\n                <Link state={{from: location}} to={`/movies/${id}`} >{original_title}</Link>\n            </li>))}\n    </ListOfMovies>\n  )\n}\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    original_title: PropTypes.string.isRequired\n  }))\n}\n"],"names":["getMovieReviews","API","Reviews","useState","movieReviews","setMovieReviews","loader","setLoader","error","setError","movieId","useParams","isReviews","Boolean","length","useEffect","data","results","fetchMovieReviews","map","author","content","id","KEY","BASE_URL","getTrendingMovies","page","axios","response","getMovieByKeyword","keyword","getMovieDetails","movie_id","getMovieCredits","styled","MoviesList","moviesList","location","useLocation","original_title","state","from","to"],"sourceRoot":""}